generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String  @unique
  avatarId String
  avatar   Avatar  @relation(fields: [avatarId], references: [id])
  role     Role
  spaces   Space[]
}

model Space {
  id            String          @id @unique @default(cuid())
  name          String
  width         Int
  height        Int?
  thumbnail     String?
  adminId       String
  admin         User            @relation(fields: [adminId], references: [id])
  spaceElements spaceElements[]
}

model spaceElements {
  id        String  @id @unique @default(cuid())
  elementId String
  element   Element @relation(fields: [elementId], references: [id])
  spaceId   String
  space     Space   @relation(fields: [spaceId], references: [id])
  x         Int
  y         Int
}

model Element {
  id            String          @id @unique @default(cuid())
  width         Int
  height        Int
  imageUrl      String
  mapElements   mapElements[]
  spaceElements spaceElements[]
}

model Map {
  id       String        @id @unique @default(cuid())
  width    Int
  height   Int
  name     String?
  elements mapElements[]
}

model mapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int?
  y         Int?
  element   Element @relation(fields: [elementId], references: [id])
  map       Map     @relation(fields: [mapId], references: [id])
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}
